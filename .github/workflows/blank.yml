name: Notify on PR Comment

# Trigger the workflow on pull request events with the 'opened' and 'edited' action types
on:
  pull_request:
    types: [opened, edited]

jobs:
  notify:
    name: Notify on PR Comment
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Ruby and install the Slack Ruby gem
      - name: Set up Ruby and install dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.0'
      - name: Install Slack Ruby gem
        run: gem install slack-notifier

      # Get the PR details and comment from the GitHub API
      - name: Get PR details and comment
        id: pr
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:owner/:repo/pulls/:pull_number
          owner: ${{ github.repository_owner }}
          repo: ${{ github.repository }}
          pull_number: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Send a Slack message to the PR author
      - name: Notify on Slack
        run: |
          require 'slack-notifier'

          # Set up the Slack bot token and channel ID
          notifier = Slack::Notifier.new(
            ENV['SLACK_BOT_TOKEN'],
            channel: ENV['SLACK_CHANNEL_ID']
          )

          # Get the PR author's username
          author = ${{ steps.pr.outputs.user.login }}

          # Get the PR comment body and URL
          comment = ${{ steps.pr.outputs.body }}
          comment_url = ${{ steps.pr.outputs.html_url }}

          # Format the message and send it to Slack
          message = "New comment on your pull request <#{comment_url}|#{author}>: \"#{comment}\""
          notifier.ping(message)
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: 'your-slack-channel-id'
